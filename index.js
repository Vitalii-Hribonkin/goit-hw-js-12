import{a as E,S as B,i as n}from"./assets/vendor-BDaiwwc1.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const h of s.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&a(h)}).observe(document,{childList:!0,subtree:!0});function o(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(e){if(e.ep)return;e.ep=!0;const s=o(e);fetch(e.href,s)}})();const P="47432797-7b7ae49ed8d9ca3634e43854b",$="https://pixabay.com/api/",p=async(t,r=1)=>{const o=new URLSearchParams({key:P,q:t,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:r});try{return(await E.get(`${$}?${o}`)).data}catch{throw new Error("Failed to fetch images")}};let u;const g=(t,r,o=!1)=>{const a=r.map(e=>`
      <li class="li">
        <a href="${e.largeImageURL}">
          <img src="${e.webformatURL}" alt="${e.tags}" />
        </a>
        <div class="div">
          <p class="p">Likes: ${e.likes}</p>
          <p class="p">Views: ${e.views}</p>
          <p class="p">Comments: ${e.comments}</p>
          <p class="p">Downloads: ${e.downloads}</p>
        </div>
      </li>
    `).join("");o?t.insertAdjacentHTML("beforeend",a):t.innerHTML=a,u?u.refresh():u=new B(".gallery a")},y=document.getElementById("search-form"),d=document.getElementById("gallery"),L=document.getElementById("loader"),f=document.getElementById("load-more");let i=1,l="",m=0;const w=()=>L.classList.remove("hidden"),v=()=>L.classList.add("hidden"),b=()=>f.classList.remove("hidden"),c=()=>f.classList.add("hidden"),I=()=>{const{height:t}=d.firstElementChild.getBoundingClientRect();window.scrollBy({top:t*2,behavior:"smooth"})},M=async t=>{if(t.preventDefault(),l=y.elements["search-input"].value.trim(),i=1,!l){n.error({title:"Error",message:"Please enter a search query!"});return}d.innerHTML="",c(),w();try{const{images:r,total:o}=await p(l,i);m=o,r.length===0?n.warning({title:"No Results",message:"Sorry, there are no images matching your search query. Please try again!"}):(g(d,r),r.length<m&&b())}catch{n.error({title:"Error",message:"Something went wrong. Please try again later!"})}finally{v()}},S=async()=>{i+=1,c(),w();try{const{images:t}=await p(l,i);if(t.length===0){n.info({message:"We're sorry, but you've reached the end of search results."}),c();return}g(d,t,!0),i*15>=m?(c(),n.info({message:"We're sorry, but you've reached the end of search results."})):b(),I()}catch{n.error({title:"Error",message:"Failed to load more images!"})}finally{v()}};y.addEventListener("submit",M);f.addEventListener("click",S);
//# sourceMappingURL=index.js.map
